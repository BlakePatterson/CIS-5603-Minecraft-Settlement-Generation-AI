
@article{salge_ai_2020,
	title = {The {AI} Settlement Generation Challenge in Minecraft: First Year Report},
	volume = {34},
	issn = {0933-1875, 1610-1987},
	url = {http://link.springer.com/10.1007/s13218-020-00635-0},
	doi = {10.1007/s13218-020-00635-0},
	shorttitle = {The {AI} Settlement Generation Challenge in Minecraft},
	abstract = {This article outlines what we learned from the ﬁrst year of the {AI} Settlement Generation Competition in Minecraft, a competition about producing {AI} programs that can generate interesting settlements in Minecraft for an unseen map. This challenge seeks to focus research into adaptive and holistic procedural content generation. Generating Minecraft towns and villages given existing maps is a suitable task for this, as it requires the generated content to be adaptive, functional, evocative and aesthetic at the same time. Here, we present the results from the ﬁrst iteration of the competition. We discuss the evaluation methodology, present the diﬀerent technical approaches by the competitors, and outline the open problems.},
	pages = {19--31},
	number = {1},
	journaltitle = {{KI} - Künstliche Intelligenz},
	shortjournal = {Künstl Intell},
	author = {Salge, Christoph and Green, Michael Cerny and Canaan, Rodrigo and Skwarski, Filip and Fritsch, Rafael and Brightmoore, Adrian and Ye, Shaofang and Cao, Changxing and Togelius, Julian},
	urldate = {2022-02-24},
	date = {2020-03},
	langid = {english},
	file = {Salge et al. - 2020 - The AI Settlement Generation Challenge in Minecraf.pdf:Z\:\\Documents\\zotero\\directory\\storage\\UMB4NP7S\\Salge et al. - 2020 - The AI Settlement Generation Challenge in Minecraf.pdf:application/pdf},
}

@article{salge_generative_2019,
	title = {Generative Design in Minecraft: Chronicle Challenge},
	url = {http://arxiv.org/abs/1905.05888},
	shorttitle = {Generative Design in Minecraft},
	abstract = {We introduce the Chronicle Challenge as an optional addition to the Settlement Generation Challenge in Minecraft. One of the foci of the overall competition is adaptive procedural content generation ({PCG}), an arguably under-explored problem in computational creativity. In the base challenge, participants must generate new settlements that respond to and ideally interact with existing content in the world, such as the landscape or climate. The goal is to understand the underlying creative process, and to design better {PCG} systems. The Chronicle Challenge in particular focuses on the generation of a narrative based on the history of a generated settlement, expressed in natural language. We discuss the unique features of the Chronicle Challenge in comparison to other competitions, clarify the characteristics of a chronicle eligible for submission and describe the evaluation criteria. We furthermore draw on simulationbased approaches in computational storytelling as examples to how this challenge could be approached.},
	journaltitle = {{arXiv}:1905.05888 [cs]},
	author = {Salge, Christoph and Guckelsberger, Christian and Green, Michael Cerny and Canaan, Rodrigo and Togelius, Julian},
	urldate = {2022-02-24},
	date = {2019-05-14},
	langid = {english},
	eprinttype = {arxiv},
	eprint = {1905.05888},
	keywords = {Computer Science - Artificial Intelligence, Computer Science - Computation and Language, Computer Science - Computers and Society},
	file = {Salge et al. - 2019 - Generative Design in Minecraft Chronicle Challeng.pdf:Z\:\\Documents\\zotero\\directory\\storage\\K7A659XD\\Salge et al. - 2019 - Generative Design in Minecraft Chronicle Challeng.pdf:application/pdf},
}

@article{salge_generative_2018,
	title = {Generative Design in Minecraft ({GDMC}), Settlement Generation Competition},
	url = {http://arxiv.org/abs/1803.09853},
	doi = {10.1145/3235765.3235814},
	abstract = {This paper introduces the settlement generation competition for Minecraft, the first part of the Generative Design in Minecraft challenge. The settlement generation competition is about creating Artificial Intelligence ({AI}) agents that can produce functional, aesthetically appealing and believable settlements adapted to a given Minecraft map — ideally at a level that can compete with human created designs. The aim of the competition is to advance procedural content generation for games, especially in overcoming the challenges of adaptive and holistic {PCG}. The paper introduces the technical details of the challenge, but mostly focuses on what challenges this competition provides and why they are scientifically relevant.},
	pages = {1--10},
	journaltitle = {Proceedings of the 13th International Conference on the Foundations of Digital Games},
	author = {Salge, Christoph and Green, Michael Cerny and Canaan, Rodrigo and Togelius, Julian},
	urldate = {2022-02-24},
	date = {2018-08-07},
	langid = {english},
	eprinttype = {arxiv},
	eprint = {1803.09853},
	keywords = {Computer Science - Artificial Intelligence, Computer Science - Computers and Society},
	file = {Salge et al. - 2018 - Generative Design in Minecraft (GDMC), Settlement .pdf:Z\:\\Documents\\zotero\\directory\\storage\\3KH6GVJT\\Salge et al. - 2018 - Generative Design in Minecraft (GDMC), Settlement .pdf:application/pdf},
}

@article{green_organic_2019,
	title = {Organic Building Generation in Minecraft},
	url = {http://arxiv.org/abs/1906.05094},
	abstract = {This paper presents a method for generating floor plans for structures in Minecraft (Mojang 2009). Given a 3D space, it will autogenerate a building to fill that space using a combination of constrained growth and cellular automata. The result is a series of organic-looking buildings complete with rooms, windows, and doors connecting them. The method is applied to the Generative Design in Minecraft ({GDMC}) competition [24] to auto-generate buildings in Minecraft, and the results are discussed.},
	journaltitle = {{arXiv}:1906.05094 [cs]},
	author = {Green, Michael Cerny and Salge, Christoph and Togelius, Julian},
	urldate = {2022-02-24},
	date = {2019-06-11},
	langid = {english},
	eprinttype = {arxiv},
	eprint = {1906.05094},
	keywords = {Computer Science - Human-Computer Interaction},
	file = {Green et al. - 2019 - Organic Building Generation in Minecraft.pdf:Z\:\\Documents\\zotero\\directory\\storage\\GMK7W2XD\\Green et al. - 2019 - Organic Building Generation in Minecraft.pdf:application/pdf},
}

@article{herve_comparing_2021,
	title = {Comparing {PCG} metrics with Human Evaluation in Minecraft Settlement Generation},
	url = {http://arxiv.org/abs/2107.02457},
	abstract = {There are a range of metrics that can be applied to the artifacts produced by procedural content generation, and several of them come with qualitative claims. In this paper, we adapt a range of existing {PCG} metrics to generated Minecraft settlements, develop a few new metrics inspired by {PCG} literature, and compare the resulting measurements to existing human evaluations. The aim is to analyze how those metrics capture human evaluation scores in different categories, how the metrics generalize to another game domain, and how metrics deal with more complex artifacts. We provide an exploratory look at a variety of metrics and provide an information gain and several correlation analyses. We found some relationships between human scores and metrics counting specific elements, measuring the diversity of blocks and measuring the presence of crafting materials for the present complex blocks.},
	journaltitle = {{arXiv}:2107.02457 [cs]},
	author = {Hervé, Jean-Baptiste and Salge, Christoph},
	urldate = {2022-02-24},
	date = {2021-07-06},
	langid = {english},
	eprinttype = {arxiv},
	eprint = {2107.02457},
	keywords = {Computer Science - Artificial Intelligence},
	file = {Hervé and Salge - 2021 - Comparing PCG metrics with Human Evaluation in Min.pdf:Z\:\\Documents\\zotero\\directory\\storage\\E93MEN6S\\Hervé and Salge - 2021 - Comparing PCG metrics with Human Evaluation in Min.pdf:application/pdf},
}

@article{fridh_settlement_nodate,
	title = {Settlement Generation in Minecraft},
	abstract = {This paper explores graph grammar and constructive solutions for settlement generation in Minecraft. It uses graph grammar to flatten parts of the surface in order to increase the space for the buildings. Buildings are then generated with a constructive solution that follows a step-by-step model where different parts of the building are created in a certain order. Different parts include the shape of the foundation itself, the walls, the roof and the furniture. The algorithm picks which blocks to use on different parts of the house through an object called district palette. The buildings are divided up into areas called districts, where all the houses within the district follow a similar aesthetic style. The goal is to compare our solution with existing solutions from the Generative Design in Minecraft ({GDMC}) competition to see how it holds up against the other submissions. To evaluate, a user study was performed where each jury has to score four criteria: adaptivity, functionality, evocative narrative, and aesthetics. The results show that the solution had a strong aesthetics but fell behind in adaptivity, functionality, and evocative narrative. Most of it was due to not being able to generate different structures, and not cleaning up the trees around the buildings and the roads.},
	pages = {55},
	author = {Fridh, Marcus and Sy, Fredrik},
	langid = {english},
	file = {Fridh and Sy - Settlement Generation in Minecraft.pdf:Z\:\\Documents\\zotero\\directory\\storage\\L8K9IVA8\\Fridh and Sy - Settlement Generation in Minecraft.pdf:application/pdf},
}
@book{shaker2016procedural,
  title={Procedural content generation in games},
  author={Shaker, Noor and Togelius, Julian and Nelson, Mark J},
  year={2016},
  publisher={Springer}
}

@article{van2013procedural,
  title={Procedural generation of dungeons},
  author={Van Der Linden, Roland and Lopes, Ricardo and Bidarra, Rafael},
  journal={IEEE Transactions on Computational Intelligence and AI in Games},
  volume={6},
  number={1},
  pages={78--89},
  year={2013},
  publisher={IEEE}
}

@article{togelius2011search,
  title={Search-based procedural content generation: A taxonomy and survey},
  author={Togelius, Julian and Yannakakis, Georgios N and Stanley, Kenneth O and Browne, Cameron},
  journal={IEEE Transactions on Computational Intelligence and AI in Games},
  volume={3},
  number={3},
  pages={172--186},
  year={2011},
  publisher={IEEE}
}

@inproceedings{van2020declarative,
  title={Declarative procedural generation of architecture with semantic architectural profiles},
  author={van Aanholt, Levi and Bidarra, Rafael},
  booktitle={2020 IEEE Conference on Games (CoG)},
  pages={351--358},
  year={2020},
  organization={IEEE}
}

@inproceedings{awiszus2021world,
  title={World-GAN: a Generative Model for Minecraft Worlds},
  author={Awiszus, Maren and Schubert, Frederik and Rosenhahn, Bodo},
  booktitle={2021 IEEE Conference on Games (CoG)},
  pages={1--8},
  year={2021},
  organization={IEEE}
}

@misc{esko2021multi,
  title={Multi-Agent Based Settlement Generation In Minecraft},
  author={Esko, Albin and Fritiofsson, Johan},
  year={2021}
}

@inproceedings{khalifa2020pcgrl,
  title={Pcgrl: Procedural content generation via reinforcement learning},
  author={Khalifa, Ahmed and Bontrager, Philip and Earle, Sam and Togelius, Julian},
  booktitle={Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment},
  volume={16},
  number={1},
  pages={95--101},
  year={2020}
}

@article{sudhakaran2021growing,
  title={Growing 3d artefacts and functional machines with neural cellular automata},
  author={Sudhakaran, Shyam and Grbic, Djordje and Li, Siyan and Katona, Adam and Najarro, Elias and Glanois, Claire and Risi, Sebastian},
  journal={arXiv preprint arXiv:2103.08737},
  year={2021}
}

@inproceedings{viana2019survey,
  title={A survey of procedural dungeon generation},
  author={Viana, Breno MF and dos Santos, Selan R},
  booktitle={2019 18th Brazilian Symposium on Computer Games and Digital Entertainment (SBGames)},
  pages={29--38},
  year={2019},
  organization={IEEE}
}

@inproceedings{adams2017procedural,
  title={Procedural maze level generation with evolutionary cellular automata},
  author={Adams, Chad and Louis, Sushil},
  booktitle={2017 IEEE Symposium Series on Computational Intelligence (SSCI)},
  pages={1--8},
  year={2017},
  organization={IEEE}
}

@article{thompson2017generative,
  title={A generative grammar approach for action-adventure map generation in the legend of zelda},
  author={Thompson, Tommy and Lavender, Becky},
  year={2017}
}

@inproceedings{van2013designing,
  title={Designing procedurally generated levels},
  author={Van der Linden, Roland and Lopes, Ricardo and Bidarra, Rafael},
  booktitle={Ninth Artificial Intelligence and Interactive Digital Entertainment Conference},
  year={2013}
}

@inproceedings{johnson2010cellular,
  title={Cellular automata for real-time generation of infinite cave levels},
  author={Johnson, Lawrence and Yannakakis, Georgios N and Togelius, Julian},
  booktitle={Proceedings of the 2010 Workshop on Procedural Content Generation in Games},
  pages={1--4},
  year={2010}
}